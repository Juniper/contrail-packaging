# vim: set ft=upstart et ts=2:
description "Nova compute worker"
author "Soren Hansen <soren@linux2go.dk>"

start on runlevel [2345]
stop on runlevel [!2345]

chdir /var/run

env MAX_STATUS_CHECK_RETRIES=20

pre-start script
  mkdir -p /var/run/nova
  chown nova:root /var/run/nova/

  mkdir -p /var/lock/nova
  chown nova:root /var/lock/nova/

  # Only try to modprobe if not running within a container
  if [ ! -f /run/container_type ]; then
    modprobe nbd
  fi

  # If libvirt-bin is installed, always wait for it to start first
  if status libvirt-bin; then
    start wait-for-state WAIT_FOR=libvirt-bin WAIT_STATE=running WAITER=nova-compute
  fi

  # If installed, wait for neutron-ovs-cleanup to complete prior to starting
  # nova-compute.
  if status neutron-ovs-cleanup; then
    # See LP #1471022 for explanation of why we do like this
    retries=$MAX_STATUS_CHECK_RETRIES
    delay=1
    while true; do
      # Already running?
      s=`status neutron-ovs-cleanup`
      echo $s
      `echo $s| grep -qE "\sstart/running"` && break
      if retries=`expr $retries - 1`; then
        # Give it a push
        echo "Attempting to start neutron-ovs-cleanup"
        start neutron-ovs-cleanup || :
        # Wait a bit to avoid hammering ovs-cleanup (which itself may be waiting
        # on dependencies)
        echo "Recheck neutron-ovs-cleanup status in ${delay}s"
        sleep $delay
        if _=`expr $retries % 2`; then
            delay=`expr $delay + 2`
        fi
      else
        echo "Max retries ($MAX_STATUS_CHECK_RETRIES) reached - no longer waiting for neutron-ovs-cleanup to start"
        break
      fi
    done
  fi
end script

exec start-stop-daemon --start --chuid nova --exec /usr/bin/nova-compute -- --config-file=/etc/nova/nova.conf --config-file=/etc/nova/nova-compute.conf
